name: build

on: [push]

jobs:
  build:
    strategy:
      matrix:
        os: [ { runner: 'windows-latest', output-suffix: 'windows-x64' } ]
    runs-on: ${{ matrix.os.runner }}
    steps:
      - uses: actions/checkout@v4
      - name: Install mac dependencies
        if: ${{ matrix.os.runner == 'macos-latest' }}
        run: |
          brew install wxwidgets boost spdlog
      - name: Build windows dependencies
        if: ${{ matrix.os.runner == 'windows-latest' }}
        uses: johnwason/vcpkg-action@v6
        id: vcpkg
        with:
          pkgs: wxwidgets boost-algorithm boost-random boost-test boost-multi-array boost-property-tree spdlog
          triplet: x64-windows-static
          token: ${{ github.token }}
          github-binarycache: true
      - name: Build
        run: |
          mkdir build
          cd build
          cmake -DCMAKE_BUILD_TYPE=Release ${{ steps.vcpkg.outputs.vcpkg-cmake-config }} ..
          cmake --build . --config Release --target MWGroundcoverGenerator
      - name: Make release directory, copy common artifacts
        run: |
          mkdir release
          cp README.md release/README.md.txt
          cp LICENCE.txt release/LICENCE.txt
          cp CHANGELOG.md release/CHANGELOG.md.txt

          mkdir -p release/docs/examples

          cp docs/grass_cell_ref.ini release/docs/grass_cell_ref.ini
          cp docs/grass_general_info.ini release/docs/grass_general_info.ini

          cp tst/generation_snapshots/any_named_cell_exclusion/configuration.ini release/docs/examples/any_named_cell_exclusion.ini
          cp tst/generation_snapshots/bans/configuration.ini release/docs/examples/bans.ini
          cp tst/generation_snapshots/cell_name_exclusion/configuration.ini release/docs/examples/cell_name_exclusion.ini
          cp tst/generation_snapshots/region_exclusion/configuration.ini release/docs/examples/region_exclusion.ini
      - name: Copy windows artifacts to the release directory
        if: ${{ matrix.os.runner == 'windows-latest' }}
        run: |
          cp build/Release/MWGroundcoverGenerator.exe release/MWGroundcoverGenerator.exe
      - name: Copy macos artifacts to the release directory
        if: ${{ matrix.os.runner == 'macos-latest' }}
        run: |
          cp build/MWGroundcoverGenerator release/MWGroundcoverGenerator
      - name: Upload release artifacts
        uses: actions/upload-artifact@v4
        with:
          name: 'mw-groundcover-generator-${{ matrix.os.output-suffix }}'
          path: release/
          if-no-files-found: error